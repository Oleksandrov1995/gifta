import React, { useState } from "react";
import {
  cardStyleOptions,
  optionsHobbies,
  optionsPerson,
  optionsGreetingSubject,
} from "../../data/options";
import "./Main.css";

export const Main = () => {
  const [formData, setFormData] = useState({
    person: "",
    gender: "",
    age: "", // –∑–∞–º—ñ–Ω–∏–≤ null –Ω–∞ –ø–æ—Ä–æ–∂–Ω—ñ–π —Ä—è–¥–æ–∫
    greetingSubject: "",
    hobbies: [], // –º–∞—Å–∏–≤
    appearanceDescription: "",
    photoFile: null,
    cardStyle: "",
    greetingText: "",
  });

  const [customHobby, setCustomHobby] = useState("");
  const [customCardStyle, setCustomCardStyle] = useState("");
  const [loading, setLoading] = useState(false);

  const genderOptions = ["–ß–æ–ª–æ–≤—ñ–∫", "–ñ—ñ–Ω–∫–∞"];
  const filteredOptions = optionsPerson.filter(
    (option) => option.gender === formData.gender
  );

  const handleOptionSelect = (field, value) => {
    if (field === "hobbies") {
      setCustomHobby((prevCustom) => prevCustom); // –Ω–µ —á–∏—Å—Ç–∏–º–æ —Ç–µ–∫—Å—Ç –æ–¥—Ä–∞–∑—É

      setFormData((prev) => {
        const alreadySelected = prev.hobbies.includes(value);
        if (alreadySelected) {
          // –ü—Ä–∏–±–∏—Ä–∞—î–º–æ –≤–∏–±—Ä–∞–Ω–µ
          return {
            ...prev,
            hobbies: prev.hobbies.filter((hobby) => hobby !== value),
          };
        } else if (prev.hobbies.length < 4) {
          // –î–æ–¥–∞—î–º–æ, —è–∫—â–æ –º–µ–Ω—à–µ 4
          return {
            ...prev,
            hobbies: [...prev.hobbies, value],
          };
        } else {
          return prev; // –ª—ñ–º—ñ—Ç –¥–æ—Å—è–≥–Ω—É—Ç–æ
        }
      });
    } else if (field === "customHobby") {
      const trimmedValue = value.trim();
      setCustomHobby(trimmedValue);

      setFormData((prev) => {
        // –í—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Ç–µ–∫—Å—Ç (—Ç–æ–π, —â–æ –Ω–µ –≤ –∫–Ω–æ–ø–∫–∞—Ö)
        const filtered = prev.hobbies.filter((hobby) =>
          optionsHobbies.includes(hobby)
        );
        if (trimmedValue === "") {
          // –Ø–∫—â–æ –ø–æ–ª–µ –æ—á–∏—â–µ–Ω–µ ‚Äî –∑–∞–ª–∏—à–∞—î–º–æ —Ç—ñ–ª—å–∫–∏ –∫–Ω–æ–ø–∫–∏
          return { ...prev, hobbies: filtered };
        } else if (filtered.length < 4) {
          // –î–æ–¥–∞—î–º–æ/–∑–∞–º—ñ–Ω—é—î–º–æ —Å–≤—ñ–π –≤–∞—Ä—ñ–∞–Ω—Ç, —è–∫—â–æ –ª—ñ–º—ñ—Ç –Ω–µ –¥–æ—Å—è–≥–Ω—É—Ç–æ
          return { ...prev, hobbies: [...filtered, trimmedValue] };
        } else {
          // –Ø–∫—â–æ –ª—ñ–º—ñ—Ç –¥–æ—Å—è–≥–Ω—É—Ç–æ ‚Äî –Ω–µ –¥–æ–¥–∞—î–º–æ —Ç–µ–∫—Å—Ç
          return prev;
        }
      });
    } else {
      // –î–ª—è —ñ–Ω—à–∏—Ö –ø–æ–ª—ñ–≤ –ø—Ä–æ—Å—Ç–æ –æ–Ω–æ–≤–ª—é—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è
      setFormData((prev) => ({ ...prev, [field]: value }));
    }
  };

  const handleInputChange = (field) => (e) => {
    setFormData((prev) => ({ ...prev, [field]: e.target.value }));
  };

  const handlePhotoChange = (e) => {
    setFormData((prev) => ({ ...prev, photoFile: e.target.files[0] }));
  };

  const uploadImageToCloudinary = async (file) => {
  const cloudName = "dnma2ioeb"; // üîÅ –∑–∞–º—ñ–Ω–∏ –Ω–∞ —Å–≤—ñ–π
  const uploadPreset = "my_unsigned_preset"; // üîÅ –∑–∞–º—ñ–Ω–∏ –Ω–∞ —Å–≤—ñ–π

  const formData = new FormData();
  formData.append("file", file);
  formData.append("upload_preset", uploadPreset);

  const response = await fetch(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, {
    method: "POST",
    body: formData,
  });

  if (!response.ok) {
    throw new Error("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–æ—Ç–æ –Ω–∞ Cloudinary");
  }

  const data = await response.json();
  return data.secure_url; // ‚¨ÖÔ∏è URL –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
};


  const handleReset = () => {
    setFormData({
      person: "",
      gender: "",
      age: "",
      greetingSubject: "",
      hobbies: [],
      appearanceDescription: "",
      photoFile: null,
      cardStyle: "",
      greetingText: "",
    });
    setCustomHobby("");
    setCustomCardStyle("");
  };

const handleSubmit = async (e) => {
  e.preventDefault();
  setLoading(true);

  try {
    let uploadedImageUrl = "";

    // –Ø–∫—â–æ —î —Ñ–æ—Ç–æ ‚Äî —Å–ø–æ—á–∞—Ç–∫—É –∑–∞–≤–∞–Ω—Ç–∞–∂ –π–æ–≥–æ –Ω–∞ Cloudinary
    if (formData.photoFile) {
      uploadedImageUrl = await uploadImageToCloudinary(formData.photoFile);
    }

  const submitData = `–¢–∏ ‚Äî —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç —Å–µ—Ä–≤—ñ—Å—É –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –≤—ñ—Ç–∞–ª—å–Ω–∏—Ö –ª–∏—Å—Ç—ñ–≤–æ–∫. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å–µ—Ä–≤—ñ—Å—É –∑–∞–ø–æ–≤–Ω—é—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –æ—Ç—Ä–∏–º—É–≤–∞—á–∞ –ª–∏—Å—Ç—ñ–≤–∫–∏ (—Å—Ç–∞—Ç—å, –≤—ñ–∫, –≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è, –ø–æ–¥—ñ—è, —Ö–æ–±—ñ, –æ–ø–∏—Å –∑–æ–≤–Ω—ñ—à–Ω–æ—Å—Ç—ñ –∞–±–æ —Ñ–æ—Ç–æ, —Å—Ç–∏–ª—å, —Ç–µ–∫—Å—Ç –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è).

–¢–≤–æ—î –∑–∞–≤–¥–∞–Ω–Ω—è ‚Äî –∑–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ª–∏—Å—Ç—ñ–≤–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ —Ü—ñ—î—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó. –Ø–∫—â–æ –¥–µ—è–∫–∏—Ö –¥–∞–Ω–∏—Ö –Ω–µ –≤–∏—Å—Ç–∞—á–∞—î ‚Äî –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –ª–∏—à–µ —Ç—ñ, —â–æ –Ω–∞–¥–∞–Ω—ñ, –Ω–µ –≤–∏–≥–∞–¥—É–π –Ω—ñ—á–æ–≥–æ –∑–∞–π–≤–æ–≥–æ.

–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—Ä–æ –æ—Ç—Ä–∏–º—É–≤–∞—á–∞ –ª–∏—Å—Ç—ñ–≤–∫–∏:
–°—Ç–∞—Ç—å{${formData.gender}}
–í—ñ–∫ ${formData.age}
–ö–æ–≥–æ –≤—ñ—Ç–∞—î–º–æ ${formData.person} 
–ó —á–∏–º –≤—ñ—Ç–∞—î–º–æ${formData.greetingSubject}
–î–æ–¥–∞—Ç–∫–æ–≤—ñ –¥–µ—Ç–∞–ª—ñ –ø—Ä–∏–≤–æ–¥—É –¥–ª—è –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —ó—Ö –Ω–∞–¥–∞—Å—Ç—å{}
–•–æ–±—ñ, –∑–∞—Ö–æ–ø–ª–µ–Ω–Ω—è –∞–±–æ —Ä—ñ–¥ –¥—ñ—è–ª—å–Ω–æ—Å—Ç—ñ${formData.hobbies} 
–î–æ–¥–∞—Ç–∫–æ–≤—ñ –¥–µ—Ç–∞–ª—ñ –ø—Ä–æ —Ö–æ–±—ñ, –∑–∞—Ö–æ–ø–ª–µ–Ω–Ω—è –∞–±–æ —Ä—ñ–¥ –¥—ñ—è–ª—å–Ω–æ—Å—Ç—ñ —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —ó—Ö –Ω–∞–¥–∞—Å—Ç—å{}
–û–ø–∏—Å –∑–æ–≤–Ω—ñ—à–Ω–æ—Å—Ç—ñ –∞–±–æ —Ñ–æ—Ç–æ –æ—Ç—Ä–∏–º—É–≤–∞—á–∞ –ª–∏—Å—Ç—ñ–≤–∫–∏${uploadedImageUrl}
–í—ñ–∑—É–∞–ª—å–Ω–∏–π —Å—Ç–∏–ª—å${formData.cardStyle}
–¢–µ–∫—Å—Ç –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è${formData.appearanceDescription}


–ö—Ä–∏—Ç–µ—Ä—ñ—ó:

–î–æ—Ç—Ä–∏–º—É–π—Å—è —Å—Ç–∏–ª—é, –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Å—Ç–µ—Ä–µ–æ—Ç–∏–ø—ñ–≤, —Ñ–∞–Ω—Ç–∞–∑—ñ–π–Ω–∏—Ö –∞–±–æ –∫–ª—ñ—à–æ–≤–∞–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤, —è–∫—â–æ –≤–æ–Ω–∏ –Ω–µ –∑–∞–∑–Ω–∞—á–µ–Ω—ñ. 

–û–±—Ä–∞–∑ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –º–∞—î –±—É—Ç–∏ —Ö—É–¥–æ–∂–Ω—ñ–º, –∞–ª–µ —Å—Ç—Ä–æ–≥–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ —Ç–∏–ø–∞–∂—É –æ—Ç—Ä–∏–º—É–≤–∞—á–∞ –Ω–∞ —Ñ–æ—Ç–æ –∞–±–æ –≤ –æ–ø–∏—Å—ñ.
‚Äî –£–≤–∞–∂–Ω–æ –ø–æ–≤—Ç–æ—Ä—é–π —Ñ–æ—Ä–º—É –∑–∞—á—ñ—Å–∫–∏: –Ω–∞–ø—Ä—è–º–æ–∫, —è–∫ –ª–µ–∂–∏—Ç—å –≤–æ–ª–æ—Å—Å—è, –∫–æ–ª—ñ—Ä –≤–æ–ª–æ—Å—Å—è. –ù–µ –º–∞–ª—é–π –∑–∞—á—ñ—Å–∫—É, —è–∫–∞ —Ä–∞–¥–∏–∫–∞–ª—å–Ω–æ –≤—ñ–¥—Ä—ñ–∑–Ω—è—î—Ç—å—Å—è –∑–∞ –Ω–∞–ø—Ä—è–º–∫–æ–º –≤–æ–ª–æ—Å—Å—è, –∫–æ–ª—å–æ—Ä–æ–º –∞–±–æ —Å—Ç–∏–ª–µ–º (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –≤–æ–ª–æ—Å—Å—è –Ω–∞ —Ñ–æ—Ç–æ –ª–µ–∂–∏—Ç—å –≤–ø–µ—Ä–µ–¥ ‚Äî –Ω–µ –∑–∞—á—ñ—Å—É–π –≤ –±–æ–∫–∏, —ñ –Ω–∞–≤–ø–∞–∫–∏).
‚Äî –í—ñ–¥—Ç–≤–æ—Ä—é–π –ø—Ä–æ–ø–æ—Ä—Ü—ñ—ó —Å—Ç–∞—Ç—É—Ä–∏: —è–∫—â–æ –Ω–∞ —Ñ–æ—Ç–æ –∫—Ä–µ–º–µ–∑–Ω–∞ –∞–±–æ —à–∏—Ä–æ–∫–∞ —Ñ—ñ–≥—É—Ä–∞ ‚Äî –Ω–µ –º–∞–ª—é–π —Ö—É–¥–æ—Ä–ª—è–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, —ñ –Ω–∞–≤–ø–∞–∫–∏.
‚Äî –ó–±–µ—Ä—ñ–≥–∞–π —Ñ–æ—Ä–º—É –æ–±–ª–∏—á—á—è, –∑–æ–∫—Ä–µ–º–∞ –ª—ñ–Ω—ñ—ó –ø—ñ–¥–±–æ—Ä—ñ–¥–¥—è —ñ –∑–∞–≥–∞–ª—å–Ω–∏–π —Å–∏–ª—É–µ—Ç –æ–±–ª–∏—á—á—è.
‚Äî –¢–∏–ø–∞–∂ –æ—á–µ–π, –Ω–æ—Å–∞, –ø–æ—Å–º—ñ—à–∫–∏ –º–∞—î –±—É—Ç–∏ –Ω–∞–±–ª–∏–∂–µ–Ω–∏–π –¥–æ —Ñ–æ—Ç–æ, –±–µ–∑ –ø–µ—Ä–µ–±—ñ–ª—å—à–µ–Ω—å (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –Ω–µ —Ä–æ–±–∏ —à–∏—Ä–æ–∫—É –ø–æ—Å–º—ñ—à–∫—É, —è–∫—â–æ –Ω–∞ —Ñ–æ—Ç–æ –ø–æ—Å–º—ñ—à–∫–∞ —Å–ø–æ–∫—ñ–π–Ω–∞).
‚Äî –í—Ä–∞—Ö–æ–≤—É–π –æ–¥—è–≥ —ñ –∫–æ–ª—å–æ—Ä–∏, –∞–ª–µ –Ω–µ –¥–æ–¥–∞–≤–∞–π –∑–∞–π–≤–∏—Ö –¥–µ—Ç–∞–ª–µ–π, —è–∫–∏—Ö –Ω–µ–º–∞—î –Ω–∞ —Ñ–æ—Ç–æ —á–∏ –≤ –æ–ø–∏—Å—ñ.
‚Äî –ù–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –≥—Ä–∏–º–∞—Å–∏, –ø–µ—Ä–µ–±—ñ–ª—å—à–µ–Ω—ñ –µ–º–æ—Ü—ñ—ó, –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏.
‚Äî –û–±—Ä–∞–∑ –º–∞—î –±—É—Ç–∏ –≤–ø—ñ–∑–Ω–∞–≤–∞–Ω–∏–º —ñ —Å–∏–º–≤–æ–ª—ñ—á–Ω–∏–º, —â–æ–± –ª—é–¥–∏–Ω–∞ –º–æ–≥–ª–∞ –≤—ñ–¥—á—É—Ç–∏, —â–æ —Ü–µ —Å–∞–º–µ –≤–æ–Ω–∞, –∞–ª–µ –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ —Ñ–æ—Ç–æ-—Ä–µ–∞–ª—ñ—Å—Ç–∏—á–Ω–∏–º.

–§–æ–Ω –º–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ —Ö–æ–±—ñ, –∑–∞—Ö–æ–ø–ª–µ–Ω–Ω—è–º –∞–±–æ —Ä–æ–¥—É –¥—ñ—è–ª—å–Ω–æ—Å—Ç—ñ, –∞–±–æ –¥–æ–ø–æ–≤–Ω—é–≤–∞—Ç–∏ —ó—Ö, –∞–±–æ –±—É—Ç–∏ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–∏–º —è–∫—â–æ –Ω–µ –¥–æ—Å—Ç–∞—Ç–Ω—å–æ —ó–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó —á–∏ —Ü–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏–º–µ —Å—Ç–∏–ª—é.
- –ù–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∑–∞–π–≤–æ—ó —Ä–µ–∞–ª—ñ—Å—Ç–∏—á–Ω–æ—Å—Ç—ñ —è–∫—â–æ —Ü–µ –Ω–µ –∑–∞–¥–∞–Ω–µ —Å—Ç–∏–ª–µ–º
- –ù–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ö–∞–æ—Ç–∏—á–Ω–æ–≥–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–Ω—è —Å–∏–º–≤–æ–ª—ñ–≤
- –ñ—ñ–Ω–∫–∏ –≤—ñ–¥ 35 —Ä–æ–∫—ñ–≤ –º–∞—é—Ç—å –≤–∏–≥–ª—è–¥–∞—Ç–∏ –º–æ–ª–æ–¥—à–∏–º–∏, –∞ –Ω–µ —Å—Ç–∞—Ä—à–∏–º–∏ –∑–∞ —Å–≤—ñ–π –≤—ñ–∫. –£–Ω–∏–∫–∞—Ç–∏ –∑—ñ—Å—Ç–∞—Ä–µ–Ω–∏—Ö –æ–±—Ä–∞–∑—ñ–≤ —è–∫—â–æ –ø—Ä–æ —Ü–µ –Ω–µ –π–¥–µ—Ç—å—Å—è –≤ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–≤—ñ–∫ 70+, –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –¥–ª—è –±–∞–±—É—Å—ñ)
- –ß–æ–ª–æ–≤—ñ–∫–∏ 45+ - –±–µ–∑ —è–≤–Ω–æ–≥–æ –∂–∏–≤–æ—Ç–∞, —è–∫—â–æ –Ω–µ –≤–∫–∞–∑–∞–Ω–æ.
- –ü—ñ–¥–ª—ñ—Ç–∫–∏ ‚Äî –±–µ–∑ —ñ–≥—Ä–∞—à–æ–∫ —Ç–∞ –º—É–ª—å—Ç—è—à–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —è–∫—â–æ –ø—Ä–æ —Ü–µ –Ω–µ –≤–∫–∞–∑–∞–Ω–æ.
- –ù–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∑–∞–π–≤–æ—ó —Ä–µ–∞–ª—ñ—Å—Ç–∏—á–Ω–æ—Å—Ç—ñ, —è–∫—â–æ –Ω–µ –≤–∫–∞–∑–∞–Ω–æ —Å—Ç–∏–ª–µ–º`;

    // –¢–µ–ø–µ—Ä —Ñ–æ—Ä–º—É—î–º–æ –¥–∞–Ω—ñ –¥–ª—è Make
    // const submitData = new FormData();
    // submitData.append("person", formData.person);
    // submitData.append("gender", formData.gender);
    // submitData.append("age", formData.age);
    // submitData.append("greetingSubject", formData.greetingSubject);
    // submitData.append("hobbies", formData.hobbies.join(", "));
    // submitData.append("appearanceDescription", formData.appearanceDescription);
    // submitData.append("photoUrl", uploadedImageUrl); // ‚¨ÖÔ∏è —Ç—ñ–ª—å–∫–∏ URL
    // submitData.append("cardStyle", formData.cardStyle);
    // submitData.append("greetingText", formData.greetingText);
    // submitData.append("promtForAI", promptForAI);
    

    // const response = await fetch("https://hook.eu2.make.com/o8eoc69ifeo4ne9pophf1io4q30wm23c", {
    //   method: "POST",
    //   body: submitData,
    // });
    const response = await fetch("https://hook.eu2.make.com/o8eoc69ifeo4ne9pophf1io4q30wm23c", {
  method: "POST",
  headers: {
    "Content-Type": "application/json",
  },
  body: JSON.stringify({ prompt: submitData }), // –∫–ª—é—á prompt ‚Äî –¥–ª—è Make
});


    const text = await response.text();
    console.log("–í—ñ–¥–ø–æ–≤—ñ–¥—å —Å–µ—Ä–≤–µ—Ä–∞:", text);

    if (text) {
      const imageUrl = text.trim().replace(/^"+|"+$/g, "");
      window.location.href = imageUrl;
      alert("–ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ!");
      handleReset();
    } else {
      alert("–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ.");
    }
  } catch (error) {
    alert("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞: " + error.message);
  } finally {
    setLoading(false);
  }
};


  const showGreetingIdeas = () => {
    alert(
      `–Ü–¥–µ—ó –¥–ª—è —Ç–µ–∫—Å—Ç—É –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è:\n\n- –í 30 —Ä–æ–∫—ñ–≤ –≤—Å–µ —Ç—ñ–ª—å–∫–∏ –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è! –ü—Ä–æ–¥–æ–≤–∂—É–π —Ä—É—Ö–∞—Ç–∏—Å—è –¥–æ –º–µ—Ç–∏!\n- –ë–∞–∂–∞—é –∑–¥–æ—Ä–æ–≤'—è, —â–∞—Å—Ç—è —ñ –Ω–æ–≤–∏—Ö –∑–≤–µ—Ä—à–µ–Ω—å!\n- –ù–µ—Ö–∞–π –∫–æ–∂–µ–Ω –¥–µ–Ω—å –ø—Ä–∏–Ω–æ—Å–∏—Ç—å —Ä–∞–¥—ñ—Å—Ç—å —ñ —É—Å–ø—ñ—Ö!`
    );
  };

  return (
    <div className="container">
      <div className="form-wrapper">
        <h1>–°—Ç–≤–æ—Ä–∏ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è —Ä–∞–∑–æ–º –∑ Gifta</h1>
        <form onSubmit={handleSubmit}>
          <section>
            <h2>–û–±–µ—Ä—ñ—Ç—å —Å—Ç–∞—Ç—å</h2>
            {genderOptions.map((gender) => (
              <button
                type="button"
                key={gender}
                onClick={() => handleOptionSelect("gender", gender)}
                className={formData.gender === gender ? "active" : ""}
              >
                {gender}
              </button>
            ))}
          </section>

          <section>
            <h2>–í—ñ–∫</h2>
            <input
              type="number"
              min="0"
              max="115"
              value={formData.age}
              onChange={(e) => handleOptionSelect("age", e.target.value)}
              placeholder="–í–≤–µ–¥—ñ—Ç—å –≤—ñ–∫"
            />
            <p>—Ä–æ–∫—ñ–≤</p>
          </section>

          <section>
            <h2>–ö–æ–≥–æ –≤—ñ—Ç–∞—î–º–æ?</h2>

            {filteredOptions.map((option) => {
              const isActive = formData.person === option.label;
              return (
                <button
                  type="button"
                  key={option.label}
                  onClick={() => handleOptionSelect("person", option.label)}
                  className={isActive ? "active" : ""}
                >
                  {option.label}
                </button>
              );
            })}

            <input
              type="text"
              placeholder="–°–≤—ñ–π –≤–∞—Ä—ñ–∞–Ω—Ç"
              value={
                filteredOptions.some((opt) => opt.label === formData.person)
                  ? ""
                  : formData.person
              }
              onChange={(e) => {
                handleOptionSelect("person", e.target.value);
              }}
            />
          </section>

          <section>
            <h2>–ó —á–∏–º –≤—ñ—Ç–∞—î–º–æ?</h2>

            {optionsGreetingSubject.map((option) => {
              const isActive = formData.greetingSubject === option;
              return (
                <button
                  type="button"
                  key={option}
                  onClick={() => handleOptionSelect("greetingSubject", option)}
                  className={isActive ? "active" : ""}
                >
                  {option}
                </button>
              );
            })}

            <input
              type="text"
              placeholder="–°–≤—ñ–π –≤–∞—Ä—ñ–∞–Ω—Ç"
              value={
                optionsGreetingSubject.includes(formData.greetingSubject)
                  ? ""
                  : formData.greetingSubject
              }
              onChange={(e) =>
                handleOptionSelect("greetingSubject", e.target.value)
              }
            />
          </section>

          <section>
            <h2>–•–æ–±—ñ —Ç–∞ –∑–∞—Ö–æ–ø–ª–µ–Ω–Ω—è</h2>

            {optionsHobbies.map((option) => {
              const isActive = formData.hobbies.includes(option);
              const isDisabled =
                !isActive && formData.hobbies.length >= 4 && customHobby === "";

              return (
                <button
                  type="button"
                  key={option}
                  onClick={() => handleOptionSelect("hobbies", option)}
                  className={isActive ? "active" : ""}
                  disabled={isDisabled}
                >
                  {option}
                </button>
              );
            })}

            <input
              type="text"
              placeholder="–°–≤—ñ–π –≤–∞—Ä—ñ–∞–Ω—Ç"
              value={
                formData.hobbies.length > 0 &&
                formData.hobbies.every((hobby) => optionsHobbies.includes(hobby))
                  ? ""
                  : customHobby
              }
              onChange={(e) => handleOptionSelect("customHobby", e.target.value)}
              disabled={formData.hobbies.length >= 4}
            />

            {formData.hobbies.length >= 4 && customHobby === "" && (
              <p className="limit-message">–ú–∞–∫—Å–∏–º—É–º 4 –≤–∞—Ä—ñ–∞–Ω—Ç–∏</p>
            )}
          </section>

          <section>
            <h2>–û–ø–∏—Å –∑–æ–≤–Ω—ñ—à–Ω–æ—Å—Ç—ñ</h2>
            <input
              type="text"
              placeholder="–Ω–∞–ø—Ä. –ø—ñ–¥—Ç—è–≥–Ω—É—Ç–∏–π, –º–∞—î –≥–∞—Ä–Ω–∏–π –Ω—ñ—Å..."
              value={formData.appearanceDescription}
              onChange={handleInputChange("appearanceDescription")}
            />
            <div>
              –ê–±–æ{" "}
              <input type="file" accept="image/*" onChange={handlePhotoChange} />
              {formData.photoFile && <p>–û–±—Ä–∞–Ω–æ —Ñ–∞–π–ª: {formData.photoFile.name}</p>}
            </div>
          </section>

          <section>
            <h2>–°—Ç–∏–ª—å –ª–∏—Å—Ç—ñ–≤–∫–∏</h2>
            {cardStyleOptions.map((style) => (
              <button
                key={style}
                type="button"
                onClick={() => {
                  handleOptionSelect("cardStyle", style);
                  setCustomCardStyle("");
                }}
                className={
                  formData.cardStyle === style && customCardStyle === ""
                    ? "active"
                    : ""
                }
              >
                {style}
              </button>
            ))}

            <input
              type="text"
              placeholder="–°–≤—ñ–π –≤–∞—Ä—ñ–∞–Ω—Ç"
              value={customCardStyle}
              onChange={(e) => {
                setCustomCardStyle(e.target.value);
                setFormData((prev) => ({ ...prev, cardStyle: e.target.value }));
              }}
            />
          </section>

          <section>
            <h2>–¢–µ–∫—Å—Ç –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è</h2>
            <input
              type="text"
              placeholder="–ù–∞–ø—Ä–∏–∫–ª–∞–¥: –í 30 —Ä–æ–∫—ñ–≤ –≤—Å–µ —Ç—ñ–ª—å–∫–∏ –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è!"
              value={formData.greetingText}
              onChange={handleInputChange("greetingText")}
            />
            <button type="button" onClick={showGreetingIdeas}>
              –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —ñ–¥–µ—ó —Ç–µ–∫—Å—Ç—É
            </button>
          </section>

          <div style={{ marginTop: 20 }}>
            <button type="submit" disabled={loading}>
              {loading ? "–ù–∞–¥—Å–∏–ª–∞—î–º–æ..." : "–ù–∞–¥—ñ—Å–ª–∞—Ç–∏"}
            </button>
            <button type="button" onClick={handleReset}>
              –û—á–∏—Å—Ç–∏—Ç–∏
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};
